server:
  port: 0

signing:
  key: jwtkey #사용할 서명키

spring:
  application:
    name: product-user

#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest

  #Config Server
  cloud:
    config:
      uri: http://localhost:8888
      name: config-server

  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/db_msa_product
    username: msa_product
    password: product123
  sql:
    init:
      platform: postgres

  # jpa properties
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true #콘솔에 SQL을 띄울 것인지
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true

  security:
    oauth2:
      resource:
        user-info-uri: http://localhost:8095/auth/user    # OAuth2 콜백 URL

#  security:
#    oauth2:
#      client:
#        client-id: auth_id #client를 식별하는 고유 정보
#        client-secret: auth_secret # 엑세스 토큰을 교환하기 위한 비공개 정보(보통 암호)
#      resource:
#        jwt:
#          key-value: jwt_secret_key

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  #    prefer-ip-address: true
  #    ip-address: ${server.address}
  client:
    service-url:
      defaultZone: http://127.0.0.1:9091/eureka
    fetch-registry: true
    register-with-eureka: true



management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus